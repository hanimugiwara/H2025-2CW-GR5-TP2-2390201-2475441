DROP TABLE client CASCADE CONSTRAINTS;
DROP TABLE produit CASCADE CONSTRAINTS;
DROP TABLE commandes CASCADE CONSTRAINTS;
DROP TABLE paniers CASCADE CONSTRAINTS;

-- Table Client
CREATE TABLE client (
    id_client NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nom VARCHAR2(255) NOT NULL,
    email VARCHAR2(255) NOT NULL
);

-- Table Produit
CREATE TABLE produit (
    id_produit NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nom VARCHAR2(150) NOT NULL,
    taille VARCHAR2(50) NOT NULL,
    prix_unitaire NUMBER(10, 2) NOT NULL,
    stock NUMBER DEFAULT 0,
    categorie VARCHAR2(100) NOT NULL
);

-- Table Commande
CREATE TABLE commandes (
    id_commande NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    date_commande DATE NOT NULL,
    quantite INTEGER NOT NULL,
    prix NUMBER(10, 2) NOT NULL,
    id_client_1 NUMBER NOT NULL,
    id_produit NUMBER NOT NULL,
    CONSTRAINT fk_commande_client FOREIGN KEY (id_client_1) REFERENCES client(id_client),
    CONSTRAINT fk_commande_produit FOREIGN KEY (id_produit) REFERENCES produit(id_produit)
);

-- Table Panier
CREATE TABLE paniers (
    id_panier NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    quantite INTEGER NOT NULL,
    id_client NUMBER NOT NULL,
    id_commande NUMBER NOT NULL,
    CONSTRAINT fk_panier_client FOREIGN KEY (id_client) REFERENCES client(id_client),
    CONSTRAINT fk_panier_commande FOREIGN KEY (id_commande) REFERENCES commande(id_commande)
);

-- Activer le schéma COMMANDE pour ORDS
BEGIN
  ORDS.enable_schema(
    p_enabled             => TRUE,
    p_schema              => 'COMMANDE',
    p_url_mapping_type    => 'BASE_PATH',
    p_url_mapping_pattern => 'commande',
    p_auto_rest_auth      => FALSE
  );
  COMMIT;
END;
/

-- Activer la table CLIENT pour accès REST
BEGIN
  ORDS.enable_object (
    p_enabled      => TRUE,
    p_schema       => 'COMMANDE',
    p_object       => 'CLIENT',
    p_object_type  => 'TABLE',
    p_object_alias => 'client'
  );
  COMMIT;
END;
/

-- Activer la table PRODUIT pour accès REST
BEGIN
  ORDS.enable_object (
    p_enabled      => TRUE,
    p_schema       => 'COMMANDE',
    p_object       => 'PRODUIT',
    p_object_type  => 'TABLE',
    p_object_alias => 'produit'
  );
  COMMIT;
END;
/
BEGIN
  ORDS.enable_object (
    p_enabled      => TRUE,
    p_schema       => 'COMMANDE',
    p_object       => 'COMMANDES',
    p_object_type  => 'TABLE',
    p_object_alias => 'commandes'
  );
  COMMIT;
END;
/

BEGIN
  ORDS.enable_object (
    p_enabled      => TRUE,
    p_schema       => 'COMMANDE',
    p_object       => 'PANIERS',
    p_object_type  => 'TABLE',
    p_object_alias => 'paniers'
  );
  COMMIT;
END;
/

-- Créer le module clients pour configuration CORS
BEGIN
  ORDS.define_module(
    p_module_name    => 'clients',
    p_base_path      => '/clients/'
  );
END;
/

-- Créer le module produits pour configuration CORS
BEGIN
  ORDS.define_module(
    p_module_name    => 'produits',
    p_base_path      => '/produits/'
  );
END;
/

BEGIN
  ORDS.define_module(
    p_module_name    => 'commandes',
    p_base_path      => '/commandes/'
  );
END;
/

BEGIN
  ORDS.define_module(
    p_module_name    => 'paniers',
    p_base_path      => '/paniers/'
  );
END;
/
-- Ajouter les origines autorisées pour CORS - module clients
BEGIN 
  ORDS.set_module_origins_allowed(
    p_module_name     => 'clients',
    p_origins_allowed => 'http://localhost:3000,https://localhost:3000'
  );
  COMMIT;
END;
/

-- Ajouter les origines autorisées pour CORS - module produits
BEGIN 
  ORDS.set_module_origins_allowed(
    p_module_name     => 'produits',
    p_origins_allowed => 'http://localhost:3000,https://localhost:3000'
  );
  COMMIT;
END;
/

BEGIN 
  ORDS.set_module_origins_allowed(
    p_module_name     => 'commandes',
    p_origins_allowed => 'http://localhost:3000,https://localhost:3000'
  );
  COMMIT;
END;
/
BEGIN 
  ORDS.set_module_origins_allowed(
    p_module_name     => 'paniers',
    p_origins_allowed => 'http://localhost:3000,https://localhost:3000'
  );
  COMMIT;
END;
/
-- Vérification de l'activation du schéma
SELECT * FROM user_ords_schemas;

-- Vérification de l'activation des objets REST
SELECT * FROM user_ords_enabled_objects;

-- Exemple d'URL pour test :
-- http://localhost:8080/ords/commande/clients/
